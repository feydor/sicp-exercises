// SICP JS Ex 1.20
function gcd(a, b) {
  return b == 0 ? a : gcd(b, a % b);
}

// applicative-order evaluation
// gcd(206, 40), gcd(40, 6), gc(6, 4), gcd(4, 2), gcd(2, 0), gcd = 2
// 4 remainder operations are done

// normal-order evaluation
// gcd(206, 40); return 40 == 0 ? 206 : gcd(40, 206 % 40)
// gcd(40, 206%40); 206%40 == 0 ? 40 : gcd(206%40, 40%(206%40)), R = 1 (206%40 = 6)
// gcd(206%40, 40%(206%40)); 40%(206%40) == 0 ? 206%40 : gcd(40%(206%40), (40%(206%40)) % (206%40)), R = 3;
// gcd(40%(206%40), (40%(206%40)) % (206%40)); (40%(206%40)) % (206%40) == 0 ? 40%(206%40) : gcd((40%(206%40)) % (206%40), (40%(206%40)) % ((40%(206%40)) % (206%40))) 
// gcd((206%40) % (40%(206%40)), 
//    (40%(206% 0)) % ((206%40) % (40%(206%40)))

